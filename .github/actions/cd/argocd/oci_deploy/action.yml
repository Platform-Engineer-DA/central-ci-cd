name: Deploy Argo CD objects to OKE
description: Deploy Argo CD objects to OKE cluster using OCI CLI and kubectl

inputs:
  OCI_TENANCY_OCID:
    description: 'OCI Tenancy OCID'
    required: true
  OCI_USER_OCID:
    description: 'OCI User OCID'
    required: true
  OCI_FINGERPRINT:
    description: 'OCI Fingerprint'
    required: true
  OCI_REGION:
    description: 'OCI Region (e.g. sa-saopaulo-1)'
    required: true
  OCI_PRIVATE_KEY_B64:
    description: 'OCI Private Key (Base64 Encoded, single line)'
    required: true
  OKE_CLUSTER_OCID:
    description: 'OKE Cluster OCID'
    required: true
  ARGOCD_PATH:
    description: 'Path to Argo CD manifests'
    required: false
    default: 'k8s/argocd-project'

runs:
  using: 'composite'
  steps:
    - name: Install OCI CLI (venv)
      shell: bash
      run: |
        sudo apt-get update -y
        sudo apt-get install -y python3-venv
        python3 -m venv /opt/oci-venv
        /opt/oci-venv/bin/pip install --no-cache-dir --upgrade pip
        /opt/oci-venv/bin/pip install --no-cache-dir oci-cli
        echo "/opt/oci-venv/bin" >> "$GITHUB_PATH"

    - name: Configure OCI CLI
      shell: bash
      env:
        OCI_TENANCY_OCID:   ${{ inputs.OCI_TENANCY_OCID }}
        OCI_USER_OCID:      ${{ inputs.OCI_USER_OCID }}
        OCI_FINGERPRINT:    ${{ inputs.OCI_FINGERPRINT }}
        OCI_REGION:         ${{ inputs.OCI_REGION }}
        OCI_PRIVATE_KEY_B64: ${{ inputs.OCI_PRIVATE_KEY_B64 }}
      run: |
        mkdir -p ~/.oci
        # escreve a privada a partir do base64 (sem quebras de linha)
        if [[ -n $OCI_PRIVATE_KEY_B64]]
        printf '%s' "$OCI_PRIVATE_KEY_B64"
        printf '%s' "$OCI_PRIVATE_KEY_B64" | base64 -d > ~/.oci/oci_api_key.pem
        chmod 600 ~/.oci/oci_api_key.pem
        # cria o config
        cat > ~/.oci/config <<EOF
        [DEFAULT]
        user=${OCI_USER_OCID}
        fingerprint=${OCI_FINGERPRINT}
        tenancy=${OCI_TENANCY_OCID}
        region=${OCI_REGION}
        key_file=/home/runner/.oci/oci_api_key.pem
        EOF
        chmod 600 ~/.oci/config
        oci --version

    - name: Build kubeconfig for OKE
      shell: bash
      env:
        OKE_CLUSTER_OCID: ${{ inputs.OKE_CLUSTER_OCID }}
        OCI_REGION:       ${{ inputs.OCI_REGION }}
      run: |
        mkdir -p ~/.kube
        oci ce cluster create-kubeconfig \
          --cluster-id "$OKE_CLUSTER_OCID" \
          --region "$OCI_REGION" \
          --file ~/.kube/config \
          --token-version 2.0.0 \
          --kube-endpoint PUBLIC_ENDPOINT
        kubectl cluster-info

    - name: Apply App Project
      shell: bash
      env:
        ARGOCD_PATH: ${{ inputs.ARGOCD_PATH }}
      run: kubectl apply -f "$ARGOCD_PATH/project.yaml"

    - name: Apply Repository
      shell: bash
      env:
        ARGOCD_PATH: ${{ inputs.ARGOCD_PATH }}
      run: kubectl apply -f "$ARGOCD_PATH/repository.yaml"

    - name: Apply Applications (App of Apps ou individual)
      shell: bash
      env:
        ARGOCD_PATH: ${{ inputs.ARGOCD_PATH }}
      run: kubectl apply -f "$ARGOCD_PATH/application.yaml"
      