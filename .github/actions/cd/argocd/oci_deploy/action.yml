name: Deploy Argo CD objects to OKE
description: Deploy Argo CD objects to OKE cluster using OCI CLI and kubectl
inputs:
  OCI_TENANCY_OCID:
    description: 'OCI Tenancy OCID'
    required: true
  OCI_USER_OCID:
    description: 'OCI User OCID'
    required: true
  OCI_FINGERPRINT:
    description: 'OCI Fingerprint'
    required: true
  OCI_REGION:
    description: 'OCI Region'
    required: true
  OCI_PRIVATE_KEY_B64:
    description: 'OCI Private Key (Base64 Encoded)'
    required: true
  OKE_CLUSTER_OCID:
    description: 'OKE Cluster OCID'
    required: true

  runs:
    using: 'composite'
    env:
      ARGOCD_PATH: 'k8s/argocd-project'

    steps:

      - name: Install OCI CLI
        shell: bash
        run: |
          sudo apt-get update -y 
          sudo apt install -y python3-venv
          python3 -m venv /opt/oci-venv
          /opt/oci-venv/bin/pip install --no-cache-dir --upgrade pip
          /opt/oci-venv/bin/pip install --no-cache-dir oci-cli
          echo "/opt/oci-venv/bin" >> $GITHUB_PATH
      
      - name: Configure OCI CLI
        shell: bash
        run: |
          mkdir -p ~/.oci
          echo "$OCI_PRIVATE_KEY_B64" | base64 -d > ~/.oci/oci_api_key.pem
          chmod 600 ~/.oci/oci_api_key.pem
          cat > ~/.oci/config <<EOF
          [DEFAULT]
          user=${OCI_USER_OCID}
          fingerprint=${{ inputs.OCI_FINGERPRINT }}
          tenancy=${{ inputs.OCI_TENANCY_OCID }}
          region=${{ inputs.OCI_REGION }}
          key_file=/home/runner/.oci/oci_api_key.pem
          EOF
          chmod 600 ~/.oci/config
          oci --version

      - name: Build kubeconfig for OKE
        shell: bash
        run: |
            mkdir -p ~/.kube
            oci ce cluster create-kubeconfig \
              --cluster-id "${{ inputs.OKE_CLUSTER_OCID }}" \
              --region "${{  inputs.OCI_REGION }}" \
              --file ~/.kube/config \
              --token-version 2.0.0 \
              --kube-endpoint PUBLIC_ENDPOINT
            kubectl cluster-info

      # --- Apply AppProject / Repository / Applications ---
      - name: Apply App Project
        shell: bash
        run: kubectl apply -f ${ARGOCD_PATH}/project.yaml
      
      - name: Apply Repository
        shell: bash
        run: kubectl apply -f ${ARGOCD_PATH}/repository.yaml

      - name: Apply App Applications
        shell: bash
        run: kubectl apply -f ${ARGOCD_PATH}/application.yaml
      